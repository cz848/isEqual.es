!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).isEqual=t()}(this,(function(){"use strict";
/*!
   * Check if two parameters are equal
   * Author: Tyler.Chao
   * github: https://github.com/cz848/dateio
   */const e=e=>null!==e&&("object"==typeof e||"function"==typeof e),t=e=>toString.call(e).replace(/\[object (.+)\]/,"$1").toLowerCase();return function r(n,o){if(!e(n)||!e(o))return Object.is(n,o);if(n.constructor!==o.constructor)return!1;const s=t(n);if(s!==t(o))return!1;let u;switch(s){case"array":case"arraybuffer":return n.length===o.length&&!n.some((e,t)=>!r(e,o[t]));case"set":case"map":return n.size===o.size&&![...n.entries()].some(([e,t])=>!o.has(e)||"map"===s&&!r(t,o.get(e)));case"regexp":return n.source===o.source&&n.flags===o.flags;default:if(n.valueOf!==Object.prototype.valueOf)return n.valueOf()===o.valueOf();if(n.toString!==Object.prototype.toString)return n.toString()===o.toString();if(u=Object.keys(n),u.length!==Object.keys(o).length)return!1;if(u.some(e=>!hasOwnProperty.call(o,e)||!r(n[e],o[e])))return!1}return!0}}));
